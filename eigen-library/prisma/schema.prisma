// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Author {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  name    String    @db.String
  books   Book[]
}
model Book {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  code        String    @unique
  title       String    @db.String
  stock       Int       @db.Int
  authorId    String    @db.ObjectId
  author      Author    @relation(fields: [authorId], references: [id])
  transDetails  TransactDetails[]
}
model Member {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  code          String    @unique
  name          String    @db.String
  penalized     Boolean   @default(false)
  until         DateTime?     
  transactions  Transaction[]
}
model Transaction {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  date        DateTime  @db.Date
  returnDate  DateTime  @db.Date
  memberCode  String
  member      Member    @relation(fields: [memberCode], references: [code])
  status      Status    @default(Open)
  books       TransactDetails[]
  rt          ReturnTransaction[]
}
model TransactDetails {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  transId     String    @db.ObjectId
  transRef    Transaction @relation(fields: [transId], references: [id])
  isbn        String
  bookIsbn    Book      @relation(fields: [isbn], references: [code])
}
model ReturnTransaction {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  date        DateTime  @db.Date
  transId     String    @db.ObjectId
  transRef    Transaction @relation(fields: [transId], references: [id])
}

enum Status {
  Closed
  Open
}